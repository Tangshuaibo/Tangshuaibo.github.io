{"version":3,"sources":["webpack:///./src/views/PageLogin.vue?2c42","webpack:///src/views/PageLogin.vue","webpack:///./src/views/PageLogin.vue?ee52","webpack:///./src/views/PageLogin.vue?2c93","webpack:///./src/utils/hashCalculator.js","webpack:///./src/views/PageLogin.vue?ebb6","webpack:///./src/assets/others/default_avatar.png"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","on","jumpToPreviousPage","jumpToPageHome","ref","$event","doSubmitFormValues","urls","getRSAPubKey","postLoginVal","rulesUserName","model","value","formValues","callback","$$v","$set","expression","rulesPassword","_v","jumpToPageRegistration","staticRenderFns","name","components","Button","Field","Form","Icon","VanImage","data","routePath","pathFrom","pathTo","userName","password","beforeRouteEnter","next","vm","from","path","to","beforeRouteLeave","$refs","pageLoginForm","resetValidation","methods","checkUserNameFormat","pattern","test","rule","message","checkPassed","checkPasswordFormat","notifyBadConnection","type","postRSAEncryptedMsg","$store","getters","isConnected","submitFormValues","values","urlGetRSAPubKey","urlPostLoginVal","$router","back","push","replace","jumpToPageFrom","component","SHA256Calculator","JSON","stringify","hashDigest","CryptoJS","SHA256","hashDigestBase64","enc","Base64","module","exports"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,eAAe,CAACF,EAAG,OAAO,CAACE,MAAM,CAAC,GAAK,sBAAsB,KAAO,cAAcC,GAAG,CAAC,MAAQP,EAAIQ,sBAAsBJ,EAAG,WAAW,CAACE,MAAM,CAAC,GAAK,kBAAkB,MAAQ,GAAG,MAAQ,QAAQ,OAAS,QAAQ,IAAM,QAAQ,IAAM,EAAQ,SAAuCC,GAAG,CAAC,MAAQP,EAAIS,kBAAkBL,EAAG,OAAO,CAACM,IAAI,gBAAgBJ,MAAM,CAAC,GAAK,kBAAkB,cAAa,GAAOC,GAAG,CAAC,OAAS,SAASI,GAAQ,OAAOX,EAAIY,mBAAmBD,EAAQX,EAAIa,KAAKC,aAAcd,EAAIa,KAAKE,iBAAiB,CAACX,EAAG,QAAQ,CAACM,IAAI,qBAAqBJ,MAAM,CAAC,KAAO,WAAW,MAAQ,MAAM,YAAc,oBAAoB,MAAQN,EAAIgB,eAAeC,MAAM,CAACC,MAAOlB,EAAImB,WAAmB,SAAEC,SAAS,SAAUC,GAAMrB,EAAIsB,KAAKtB,EAAImB,WAAY,WAAYE,IAAME,WAAW,yBAAyBnB,EAAG,QAAQ,CAACM,IAAI,qBAAqBJ,MAAM,CAAC,KAAO,WAAW,KAAO,WAAW,MAAQ,KAAK,YAAc,oBAAoB,MAAQN,EAAIwB,eAAeP,MAAM,CAACC,MAAOlB,EAAImB,WAAmB,SAAEC,SAAS,SAAUC,GAAMrB,EAAIsB,KAAKtB,EAAImB,WAAY,WAAYE,IAAME,WAAW,yBAAyBnB,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,oBAAoB,CAACF,EAAG,SAAS,CAACE,MAAM,CAAC,GAAK,wBAAwB,MAAQ,GAAG,MAAQ,GAAG,KAAO,OAAO,cAAc,WAAW,CAACN,EAAIyB,GAAG,UAAUrB,EAAG,SAAS,CAACE,MAAM,CAAC,GAAK,0BAA0B,MAAQ,GAAG,MAAQ,GAAG,KAAO,UAAU,cAAc,UAAUC,GAAG,CAAC,MAAQP,EAAI0B,yBAAyB,CAAC1B,EAAIyB,GAAG,kBAAkB,IAAI,IAAI,IACxhDE,EAAkB,G,8PCqGtB,GACEC,KAAM,YACNC,WAAY,CACVC,OAAJ,OACIC,MAAJ,OACIC,KAAJ,OACIC,KAAJ,OACIC,SAAJ,QAEEC,KATF,WAUI,MAAO,CACLtB,KAAM,CACJC,aAAc,EAAtB,KACQC,aAAc,EAAtB,MAEMqB,UAAW,CACTC,SAAU,GACVC,OAAQ,IAEVnB,WAAY,CACVoB,SAAU,GACVC,SAAU,IAEZxB,cAAe,CACrB,CACQ,UAAR,EACQ,QAAR,UAEA,CACQ,QAAR,GACQ,UAAR,2BAGMQ,cAAe,CACrB,CACQ,UAAR,EACQ,QAAR,SAEA,CACQ,QAAR,GACQ,UAAR,6BAKEiB,iBA7CF,SA6CA,OACIC,GAAK,SAAT,GACMC,EAAGP,UAAY,CACbC,SAAUO,EAAKC,KACfP,OAAQQ,EAAGD,UAIjBE,iBArDF,SAqDA,OACI9C,KAAK+C,MAAMC,cAAcC,kBACzBR,KAEFS,QAAS,CAEPC,oBAFJ,SAEA,KACM,IAAN,iBACA,KAUM,OATKC,EAAQC,KAAKpC,GAExB,WACQqC,EAAKC,QAAU,WACvB,YACQD,EAAKC,QAAU,YAEfC,GAAc,EANdF,EAAKC,QAAU,kBAQVC,GAGTC,oBAjBJ,SAiBA,KACM,IAAN,iBACA,KAUM,OATKL,EAAQC,KAAKpC,GAExB,WACQqC,EAAKC,QAAU,WACvB,YACQD,EAAKC,QAAU,YAEfC,GAAc,EANdF,EAAKC,QAAU,kBAQVC,GAGTE,oBAhCJ,WAiCM,eAAN,CACQC,KAAM,SACNJ,QAAS,aAIb1C,aAvCJ,SAuCA,GACM,OAAO,OAAb,OAAa,GAAb,OACA,kBAAQ,OAAR,sBACA,mBAAQ,OAAR,sBAGI+C,oBA7CJ,SA6CA,kBACM,OAAO,OAAb,OAAa,CAAb,aACA,kBAAQ,OAAR,KACA,mBAAQ,IAAR,IACA,0GAaQ,OAZR,8EACU,EAAV,sDAEA,8EACU,EAAV,oDAEA,4BACU,EAAV,mDAEA,4EACU,EAAV,kDAEA,sBAII,iBAlEJ,SAkEA,uLAEA,kBAFA,cAEA,EAFA,OAIA,sCAJA,SAMA,6BANA,cAMA,EANA,yBAQA,GARA,8CAWIjD,mBA7EJ,SA6EA,kBAEM,GAAKX,KAAK6D,OAAOC,QAAQC,YAKzB,OAAO/D,KAAKgE,iBAAiBC,EAAQC,EAAiBC,GAC5D,kBAEQ,EAAR,8DAEQ,eAAR,CACU,KAAV,UACU,QAAV,SAGQ,EAAR,yCAEA,kBAEA,6BAKQ,eAAR,CACU,KAAV,SACU,QAAV,SANU,EAAV,yBAnBQnE,KAAK0D,uBA8BTnD,mBA9GJ,WA+GMP,KAAKoE,QAAQC,QAGf7D,eAlHJ,WAmHMR,KAAKoE,QAAQE,KAAK,MAGpB7C,uBAtHJ,WAuHMzB,KAAKoE,QAAQG,QAAQ,kBAGvBC,eA1HJ,WA2HUxE,KAAKmC,UAAUC,WAAapC,KAAKmC,UAAUE,OAC7CrC,KAAKoE,QAAQG,QAAQvE,KAAKmC,UAAUC,UAEpCpC,KAAKQ,oBC7RsU,I,wBCQ/UiE,EAAY,eACd,EACA3E,EACA4B,GACA,EACA,KACA,WACA,MAIa,aAAA+C,E,6CCnBf,2DAGA,SAASC,EAAkBnB,GACF,kBAAZA,IACTA,EAAUoB,KAAKC,UAAUrB,IAE3B,IAAMsB,EAAaC,IAASC,OAAOxB,GAC7ByB,EAAmBF,IAASG,IAAIC,OAAON,UAAUC,GACvD,OAAOG,I,2DCTT,yBAAwe,EAAG,G,qBCA3eG,EAAOC,QAAU,IAA0B","file":"js/chunk-8df17552.62a41912.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"page-login\"}},[_c('Icon',{attrs:{\"id\":\"page-login-btn-back\",\"name\":\"arrow-left\"},on:{\"click\":_vm.jumpToPreviousPage}}),_c('VanImage',{attrs:{\"id\":\"page-login-icon\",\"round\":\"\",\"width\":\"144px\",\"height\":\"144px\",\"fit\":\"cover\",\"src\":require('@/assets/others/default_avatar.png')},on:{\"click\":_vm.jumpToPageHome}}),_c('Form',{ref:\"pageLoginForm\",attrs:{\"id\":\"page-login-form\",\"show-error\":false},on:{\"submit\":function($event){return _vm.doSubmitFormValues($event, _vm.urls.getRSAPubKey, _vm.urls.postLoginVal)}}},[_c('Field',{ref:\"loginFieldUserName\",attrs:{\"name\":\"userName\",\"label\":\"用户名\",\"placeholder\":\"请输入6至20个字符（字母或数字）\",\"rules\":_vm.rulesUserName},model:{value:(_vm.formValues.userName),callback:function ($$v) {_vm.$set(_vm.formValues, \"userName\", $$v)},expression:\"formValues.userName\"}}),_c('Field',{ref:\"loginFieldPassword\",attrs:{\"type\":\"password\",\"name\":\"password\",\"label\":\"密码\",\"placeholder\":\"请输入8至20个字符（字母或数字）\",\"rules\":_vm.rulesPassword},model:{value:(_vm.formValues.password),callback:function ($$v) {_vm.$set(_vm.formValues, \"password\", $$v)},expression:\"formValues.password\"}}),_c('div',{attrs:{\"id\":\"page-login-btns\"}},[_c('Button',{attrs:{\"id\":\"page-login-btn-submit\",\"round\":\"\",\"block\":\"\",\"type\":\"info\",\"native-type\":\"submit\"}},[_vm._v(\" 登录 \")]),_c('Button',{attrs:{\"id\":\"page-login-btn-register\",\"round\":\"\",\"block\":\"\",\"type\":\"default\",\"native-type\":\"button\"},on:{\"click\":_vm.jumpToPageRegistration}},[_vm._v(\" 没有账号？点我注册 \")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div id=\"page-login\">\r\n    <Icon\r\n      id=\"page-login-btn-back\"\r\n      name=\"arrow-left\"\r\n      @click=\"jumpToPreviousPage\"\r\n    />\r\n    <VanImage\r\n      id=\"page-login-icon\"\r\n      round\r\n      width=\"144px\"\r\n      height=\"144px\"\r\n      fit=\"cover\"\r\n      :src=\"require('@/assets/others/default_avatar.png')\"\r\n      @click=\"jumpToPageHome\"\r\n    />\r\n    <Form\r\n      id=\"page-login-form\"\r\n      ref=\"pageLoginForm\"\r\n      :show-error=\"false\"\r\n      @submit=\"doSubmitFormValues($event, urls.getRSAPubKey, urls.postLoginVal)\"\r\n    >\r\n      <Field\r\n        ref=\"loginFieldUserName\"\r\n        v-model=\"formValues.userName\"\r\n        name=\"userName\"\r\n        label=\"用户名\"\r\n        placeholder=\"请输入6至20个字符（字母或数字）\"\r\n        :rules=\"rulesUserName\"\r\n      />\r\n      <Field\r\n        ref=\"loginFieldPassword\"\r\n        v-model=\"formValues.password\"\r\n        type=\"password\"\r\n        name=\"password\"\r\n        label=\"密码\"\r\n        placeholder=\"请输入8至20个字符（字母或数字）\"\r\n        :rules=\"rulesPassword\"\r\n      />\r\n      <div id=\"page-login-btns\">\r\n        <Button\r\n          id=\"page-login-btn-submit\"\r\n          round\r\n          block\r\n          type=\"info\"\r\n          native-type=\"submit\"\r\n        >\r\n          登录\r\n        </Button>\r\n        <Button\r\n          id=\"page-login-btn-register\"\r\n          round\r\n          block\r\n          type=\"default\"\r\n          native-type=\"button\"\r\n          @click=\"jumpToPageRegistration\"\r\n        >\r\n          没有账号？点我注册\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n#page-login {\r\n  overflow: auto;\r\n}\r\n\r\n#page-login-btn-back {\r\n  position: absolute;\r\n  top: 16px;\r\n  left: 16px;\r\n  width: 40px;\r\n  font-size: 16px;\r\n  line-height: 40px;\r\n  text-align: center;\r\n  color: white;\r\n  background-color: var(--primary-color);\r\n  border-radius: 50%;\r\n}\r\n\r\n#page-login-icon {\r\n  display: block;\r\n  margin: 64px auto;\r\n}\r\n\r\n#page-login-btns {\r\n  padding: 32px 16px;\r\n}\r\n\r\n#page-login-btn-register {\r\n  margin-top: 16px;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport { SHA256Calculator } from '@/utils/hashCalculator.js'\r\nimport { axiosRenewAccessToken, axiosEncryptWithRSAOAEP } from '@/utils/axiosInterceptor.js'\r\nimport { urlAPIGetRSACryptionKey, urlAPIPostUserLogin } from '@/api/requestURLs.js'\r\nimport { Button, Field, Form, Icon, Image as VanImage, Notify } from 'vant'\r\n\r\nexport default {\r\n  name: 'PageLogin',\r\n  components: {\r\n    Button,\r\n    Field,\r\n    Form,\r\n    Icon,\r\n    VanImage\r\n  },\r\n  data () {\r\n    return {\r\n      urls: {\r\n        getRSAPubKey: urlAPIGetRSACryptionKey,\r\n        postLoginVal: urlAPIPostUserLogin\r\n      },\r\n      routePath: {\r\n        pathFrom: '',\r\n        pathTo: ''\r\n      },\r\n      formValues: {\r\n        userName: '',\r\n        password: ''\r\n      },\r\n      rulesUserName: [\r\n        {\r\n          required: true,\r\n          message: '请填写用户名'\r\n        },\r\n        {\r\n          message: '',\r\n          validator: this.checkUserNameFormat\r\n        }\r\n      ],\r\n      rulesPassword: [\r\n        {\r\n          required: true,\r\n          message: '请填写密码'\r\n        },\r\n        {\r\n          message: '',\r\n          validator: this.checkPasswordFormat\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  beforeRouteEnter (to, from, next) {\r\n    next(vm => {\r\n      vm.routePath = {\r\n        pathFrom: from.path,\r\n        pathTo: to.path\r\n      }\r\n    })\r\n  },\r\n  beforeRouteLeave (to, from, next) {\r\n    this.$refs.pageLoginForm.resetValidation()\r\n    next()\r\n  },\r\n  methods: {\r\n    // 检查用户名格式是否正确\r\n    checkUserNameFormat (value, rule) {\r\n      const pattern = /^[a-z0-9]+$/i\r\n      let checkPassed = false\r\n      if (!pattern.test(value)) {\r\n        rule.message = '不应包含除字母和数字以外的字符'\r\n      } else if (value.length < 6) {\r\n        rule.message = '字符不应少于6个'\r\n      } else if (value.length > 20) {\r\n        rule.message = '字符不应多于20个'\r\n      } else {\r\n        checkPassed = true\r\n      }\r\n      return checkPassed\r\n    },\r\n    // 检查密码格式是否正确\r\n    checkPasswordFormat (value, rule) {\r\n      const pattern = /^[a-z0-9]+$/i\r\n      let checkPassed = false\r\n      if (!pattern.test(value)) {\r\n        rule.message = '不应包含除字母和数字以外的字符'\r\n      } else if (value.length < 8) {\r\n        rule.message = '字符不应少于8个'\r\n      } else if (value.length > 20) {\r\n        rule.message = '字符不应多于20个'\r\n      } else {\r\n        checkPassed = true\r\n      }\r\n      return checkPassed\r\n    },\r\n    // 显示服务器连接失败通知\r\n    notifyBadConnection () {\r\n      Notify({\r\n        type: 'danger',\r\n        message: '连接服务器失败'\r\n      })\r\n    },\r\n    // 从后端获取RSA-OAEP公钥\r\n    getRSAPubKey (url) {\r\n      return axiosRenewAccessToken().get(url)\r\n        .then(response => response.data.payload.key)\r\n        .catch(error => Promise.reject(error))\r\n    },\r\n    // 前端向后端发送加密后的信息\r\n    postRSAEncryptedMsg (url, rsaPubKey, message) {\r\n      return axiosEncryptWithRSAOAEP(rsaPubKey).post(url, message)\r\n        .then(response => response)\r\n        .catch(error => {\r\n          const resMsg = error?.response?.data?.message\r\n          if (resMsg?.includes('key: \\'RequestUserLogin.userName\\'')) {\r\n            this.$refs.loginFieldUserName.validateMessage = '用户名格式不正确'\r\n          }\r\n          if (resMsg?.includes('key: \\'RequestUserLogin.password\\'')) {\r\n            this.$refs.loginFieldPassword.validateMessage = '密码格式不正确'\r\n          }\r\n          if (resMsg === 'user does not exist') {\r\n            this.$refs.loginFieldUserName.validateMessage = '用户名不存在'\r\n          }\r\n          if (resMsg === 'crypto/bcrypt: hashedPassword is not the hash of the given password') {\r\n            this.$refs.loginFieldPassword.validateMessage = '密码不正确'\r\n          }\r\n          return Promise.reject(error)\r\n        })\r\n    },\r\n    // 异步提交表单数据\r\n    async submitFormValues (values, urlGetRSAPubKey, urlPostLoginVal) {\r\n      // 从后端获取RSA-OAEP公钥\r\n      const rsaPubKey = await this.getRSAPubKey(urlGetRSAPubKey)\r\n      // 加密相关表单数据\r\n      values.password = SHA256Calculator(values.password)\r\n      // 前端向后端发送加密后的信息\r\n      const response = await this.postRSAEncryptedMsg(urlPostLoginVal, rsaPubKey, values)\r\n      // 返回响应结果\r\n      return response\r\n    },\r\n    // 执行异步提交表单数据\r\n    doSubmitFormValues (values, urlGetRSAPubKey, urlPostLoginVal) {\r\n      // 未成功连接服务器前不执行后续操作\r\n      if (!this.$store.getters.isConnected) {\r\n        this.notifyBadConnection()\r\n        return\r\n      }\r\n      // 在连接服务器的前提下，提交表单数据\r\n      return this.submitFormValues(values, urlGetRSAPubKey, urlPostLoginVal)\r\n        .then(response => {\r\n          // 登录成功则保存JWT\r\n          this.$store.dispatch('updateAppJWTString', response.headers.authorization)\r\n          // 登录成功的通知\r\n          Notify({\r\n            type: 'success',\r\n            message: '登录成功'\r\n          })\r\n          // 跳转到来源页面\r\n          this.$router.replace(this.routePath.pathFrom)\r\n        })\r\n        .catch(() => {\r\n          // 连接服务器失败\r\n          if (!this.$store.getters.isConnected) {\r\n            this.notifyBadConnection()\r\n            return\r\n          }\r\n          // 登陆失败\r\n          Notify({\r\n            type: 'danger',\r\n            message: '登录失败'\r\n          })\r\n        })\r\n    },\r\n    // 跳转到前一页面\r\n    jumpToPreviousPage () {\r\n      this.$router.back()\r\n    },\r\n    // 跳转到首页\r\n    jumpToPageHome () {\r\n      this.$router.push('/')\r\n    },\r\n    // 跳转到注册页面\r\n    jumpToPageRegistration () {\r\n      this.$router.replace('/registration')\r\n    },\r\n    // 跳转到来源页面\r\n    jumpToPageFrom () {\r\n      if (this.routePath.pathFrom !== this.routePath.pathTo) {\r\n        this.$router.replace(this.routePath.pathFrom)\r\n      } else {\r\n        this.jumpToPageHome()\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PageLogin.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PageLogin.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PageLogin.vue?vue&type=template&id=ff57960c&scoped=true&\"\nimport script from \"./PageLogin.vue?vue&type=script&lang=js&\"\nexport * from \"./PageLogin.vue?vue&type=script&lang=js&\"\nimport style0 from \"./PageLogin.vue?vue&type=style&index=0&id=ff57960c&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ff57960c\",\n  null\n  \n)\n\nexport default component.exports","import CryptoJS from 'crypto-js'\r\n\r\n// 使用SHA256的散列值计算器\r\nfunction SHA256Calculator (message) {\r\n  if (typeof message !== 'string') {\r\n    message = JSON.stringify(message)\r\n  }\r\n  const hashDigest = CryptoJS.SHA256(message)\r\n  const hashDigestBase64 = CryptoJS.enc.Base64.stringify(hashDigest)\r\n  return hashDigestBase64\r\n}\r\n\r\nexport {\r\n  SHA256Calculator\r\n}\r\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PageLogin.vue?vue&type=style&index=0&id=ff57960c&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PageLogin.vue?vue&type=style&index=0&id=ff57960c&scoped=true&lang=css&\"","module.exports = __webpack_public_path__ + \"img/default_avatar.db6e1d54.png\";"],"sourceRoot":""}